replicaCount: 2
image:
  repository: gosuooops/dos14-authz
  pullPolicy: IfNotPresent
  tag: 3991307e94ce3a9db807a7eec22732c60d7e0062
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: authzacc
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
securityContext: {}
service:
  type: ClusterIP
  port: 80
  protocol: TCP
  targetport: 80
ingress:
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/use-regex: 'true'
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/service-upstream: 'true'
  hosts:
    host: api.gigachad.smodata.net
    http:
      paths:
        path: /authz(.*)
        pathType: ImplementationSpecific
      port: 80
  tls: []
resources: {}
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
volumes: []
volumeMounts:
  name: nginx-config
  mountPath: /etc/nginx
nodeSelector: {}
tolerations: []
affinity: {}
deployment:
  strategy:
    type: RollingUpdate
    maxSurge: 2
  template:
    specNginx:
      name: nginx
      image: nginx:1.25.2
      ports:
        containerPort: 80
        name: http
        protocol: TCP
  env:
     name_base: POSTGRES_DB
     name_base_value: gigachad
     username_db: POSTGRES_USER
     usernameKeyRef:
       username: username
       password: password
       name: gigachad-db-creds
     password: POSTGRES_PASSWORD
     hostname: POSTGRES_HOST
     hostname_value: omegabank-rds-tf.cearikylb8tb.eu-west-1.rds.amazonaws.com
     port_name: POSTGRES_PORT
     port_value: "5432"
  volume_configMap: nginx-config

labels:
  app: authz
  bank: gigachad
  env: prd
