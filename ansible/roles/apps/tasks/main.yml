#Install Git
- name: Checking for Git
  apt_repository: repo="ppa:git-core/ppa"
  become: true
- name: Install git
  apt:
    name: git
    state: present
    update_cache: yes
  become: true
#Install Python  
- name: Check that the /usr/local/bin/python3.11 exists
  stat:
    path: /usr/local/bin/python3.11
  tags: python
  register: python_result
- name: Update apt-cache
  become: true
  apt: update_cache=yes
  tags: packages, python
  when: python_result.stat.exists == False
- name: Install packages needed for installing Python
  become: true
  apt: pkg={{ item }}
  with_items:
    - wget
    - xz-utils
    - build-essential
    - libsqlite3-dev
    - libreadline-dev
    - libssl-dev
    - openssl
  tags: packages, python
  when: python_result.stat.exists == False
- name: Extract python 3.11 into /tmp
  unarchive:
    src: https://www.python.org/ftp/python/3.11.0/Python-3.11.0.tar.xz
    dest: /tmp/
    remote_src: yes
  tags: packages, python
- name: Configure python 3.11.0
  shell: ./configure chdir=/tmp/Python-3.11.0
  tags: packages, python
  when: python_result.stat.exists == False
- name: Make
  shell: make chdir=/tmp/Python-3.11.0
  tags: packages, python
  when: python_result.stat.exists == False
- name: Install Python 3.11.0
  shell: make install chdir=/tmp/Python-3.11.0
  become: true
  become_user: root
  tags: packages, python
  when: python_result.stat.exists == False
- name: Remove tmp files used for Python 3.11.0 installation
  become: true
  file: path={{ item }} state=absent
  with_items:
    - /tmp/Python.tar.xz
    - /tmp/Python-3.11.0
  tags: packages, python
  when: python_result.stat.exists == False
#Install pip
- name: Install pip
  become: true
  apt:
    name: python3-pip
    state: present
    update_cache: yes
#Intstall Poetry
- name: Install poetry
  become: true
  pip:
    name: poetry
    state: present

